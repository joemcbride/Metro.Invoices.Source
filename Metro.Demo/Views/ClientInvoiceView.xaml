<UserControl
	x:Class="Metro.Views.ClientInvoiceView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	xmlns:behaviors="clr-namespace:Metro.Behaviors"
	xmlns:controls="clr-namespace:Metro.Controls"
	xmlns:converters="clr-namespace:Metro.Converters"
	xmlns:cm="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d" d:DesignHeight="1100" d:DesignWidth="850"
	d:DataContext="{d:DesignData /SampleData/ClientInvoiceViewModelSampleData1.xaml}">
	<UserControl.Resources>
		
		<ResourceDictionary>
			<!--<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Assets/Themes/Brushes.xaml"/>
			</ResourceDictionary.MergedDictionaries>-->
			
			<cm:BooleanToVisibilityConverter
				x:Key="Converter_BoolToVisibility"/>
		
			<converters:AlternatingRowBackgroundConverter
				x:Key="LocalConverter_AlternatingRowBackground"
				NormalBrush="White"
				AlternateBrush="#FFF9F9F9"/>
		
			<Style x:Key="Local_DefaultText" TargetType="TextBlock">
				<Setter Property="FontFamily" Value="Arial"/>
				<Setter Property="FontSize" Value="13" />
				<Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
			</Style>
		
			<Style TargetType="TextBlock" BasedOn="{StaticResource Local_DefaultText}"/>

			<Style x:Key="Local_InvoiceInfo" TargetType="TextBlock">
				<Setter Property="Margin" Value="0,0,0,5" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="FontFamily" Value="Arial"/>
				<Setter Property="FontSize" Value="13" />
				<Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
			</Style>

			<Style x:Key="Local_InvoiceData" TargetType="TextBlock" BasedOn="{StaticResource Local_InvoiceInfo}">
				<Setter Property="TextWrapping" Value="Wrap" />
			</Style>
		
			<Style x:Key="Local_InvoiceDataBox" TargetType="TextBox">
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="TextWrapping" Value="Wrap" />
				<Setter Property="Margin" Value="0,0,0,5" />
				<Setter Property="FontFamily" Value="Arial"/>
				<Setter Property="FontSize" Value="13" />
				<Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
			</Style>

			<Style x:Key="Local_SmallTitle" TargetType="TextBlock">
				<Setter Property="FontSize" Value="12" />
				<Setter Property="FontWeight" Value="Bold" />
				<Setter Property="FontFamily" Value="Arial"/>
				<Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
			</Style>
		
			<Style x:Key="Local_TextBoxStyle" TargetType="TextBox">
				<Setter Property="FontFamily" Value="Arial"/>
				<Setter Property="FontSize" Value="13"/>
				<Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
				<Setter Property="BorderThickness" Value="0"/>
				<Setter Property="MinHeight" Value="0"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
				<Setter Property="Padding" Value="0"/>
				<Setter Property="BorderBrush" Value="{x:Null}"/>
				<Setter Property="Margin" Value="0,0,0,0"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="TextBox">
							<Grid x:Name="RootElement">
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualState x:Name="Normal"/>
										<VisualState x:Name="MouseOver"/>
										<VisualState x:Name="Disabled">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
													<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="ReadOnly">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement">
													<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="FocusStates">
										<VisualState x:Name="Focused">
											<Storyboard>
												<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle" />
												<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle"/>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Padding)" Storyboard.TargetName="ContentElement">
	                                        		<DiscreteObjectKeyFrame KeyTime="0">
	                                        			<DiscreteObjectKeyFrame.Value>
	                                        				<Thickness>5</Thickness>
	                                        			</DiscreteObjectKeyFrame.Value>
	                                        		</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Unfocused">
											<Storyboard/>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="ValidationStates">
										<VisualState x:Name="Valid"/>
										<VisualState x:Name="InvalidUnfocused">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<Visibility>Visible</Visibility>
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="InvalidFocused">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<Visibility>Visible</Visibility>
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
													<DiscreteObjectKeyFrame KeyTime="0">
														<DiscreteObjectKeyFrame.Value>
															<System:Boolean>True</System:Boolean>
														</DiscreteObjectKeyFrame.Value>
													</DiscreteObjectKeyFrame>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Rectangle x:Name="Base" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="1" Fill="{TemplateBinding Background}" />
								<Rectangle x:Name="FocusRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" d:IsHidden="True" />
								<Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Margin="1" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
								<Grid Margin="0">
									<Border x:Name="ReadOnlyVisualElement" Background="{StaticResource ReadOnlyBrush}" Opacity="0"/>
	                        		<Grid>
	                        			<ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Margin="0" VerticalAlignment="Center" Background="{x:Null}" Padding="0"/>
	                        		</Grid>
								</Grid>
								<Rectangle x:Name="DisabledVisualElement" Stroke="{StaticResource ControlsDisabledBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0"/>
								<Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" Visibility="Collapsed">
									<ToolTipService.ToolTip>
										<ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
											<ToolTip.Triggers>
												<EventTrigger RoutedEvent="Canvas.Loaded">
													<BeginStoryboard>
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<System:Boolean>True</System:Boolean>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
													</BeginStoryboard>
												</EventTrigger>
											</ToolTip.Triggers>
										</ToolTip>
									</ToolTipService.ToolTip>
									<Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
										<Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="1,3,0,0"/>
										<Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="1,3,0,0"/>
									</Grid>
								</Border>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		
			<Style x:Key="Local_TextBoxStyleInvoiceData" TargetType="TextBox" BasedOn="{StaticResource Local_TextBoxStyle}">
				<Setter Property="Margin" Value="0,0,0,5"/>
			</Style>
		
			<Style x:Key="Local_TextBoxStyleInvoiceItem" TargetType="TextBox" BasedOn="{StaticResource Local_TextBoxStyle}">
				<Setter Property="FontSize" Value="12"/>
				<Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
			</Style>
			<Style x:Key="Local_RoundButton" TargetType="Button">
				<Setter Property="Cursor" Value="Hand" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Button">
							<Grid Background="Transparent">
								<Ellipse Fill="White" Stroke="{StaticResource PageBorderBrush}"/>
								<ContentPresenter Margin="0"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="Local_InvoiceItemMetro" TargetType="controls:MetroContentControl">
				<Setter Property="Foreground" Value="#FF000000"/>
				<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
				<Setter Property="VerticalContentAlignment" Value="Stretch"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="controls:MetroContentControl">
							<Grid x:Name="root" RenderTransformOrigin="0.5,0.5">
								<Grid.RenderTransform>
									<CompositeTransform/>
								</Grid.RenderTransform>
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="LayoutStates">
										<VisualState x:Name="AfterLoaded">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames
													BeginTime="00:00:00"
													Storyboard.TargetProperty="(UIElement.Opacity)"
													Storyboard.TargetName="root">
													<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
													<SplineDoubleKeyFrame KeyTime="00:00:00.400" Value="1"/>
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames
													BeginTime="00:00:00"
													Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
													Storyboard.TargetName="root">
													<SplineDoubleKeyFrame KeyTime="00:00:00" Value="-50"/>
													<EasingDoubleKeyFrame KeyTime="00:00:00.700" Value="0">
														<EasingDoubleKeyFrame.EasingFunction>
															<CubicEase EasingMode="EaseOut"/>
														</EasingDoubleKeyFrame.EasingFunction>
													</EasingDoubleKeyFrame>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="AfterUnLoaded">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames
													BeginTime="00:00:00"
													Storyboard.TargetProperty="(UIElement.Opacity)"
													Storyboard.TargetName="root">
													<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
													<SplineDoubleKeyFrame KeyTime="00:00:00.100" Value="0"/>
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames
													BeginTime="00:00:00"
													Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
													Storyboard.TargetName="root">
													<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
													<SplineDoubleKeyFrame KeyTime="00:00:00.100" Value="-50"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="BeforeLoaded"/>
										<VisualState x:Name="BeforeUnloaded"/>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<ContentPresenter
									Cursor="{TemplateBinding Cursor}"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									Content="{TemplateBinding Content}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<DataTemplate x:Key="InvoiceItemTemplate">
				<Grid Background="Transparent">
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="MouseEnter">
							<ei:GoToStateAction StateName="MouseOver"/>
						</i:EventTrigger>
						<i:EventTrigger EventName="MouseLeave">
							<ei:GoToStateAction StateName="MouseOut"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>
					<VisualStateManager.VisualStateGroups>
						<VisualStateGroup x:Name="MouseVisualStateGroup">
							<VisualStateGroup.Transitions>
								<VisualTransition GeneratedDuration="0:0:0.5">
									<VisualTransition.GeneratedEasingFunction>
										<CubicEase EasingMode="EaseInOut"/>
									</VisualTransition.GeneratedEasingFunction>
								</VisualTransition>
							</VisualStateGroup.Transitions>
							<VisualState x:Name="MouseOver">
								<Storyboard>
									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="button">
										<DiscreteObjectKeyFrame KeyTime="0">
											<DiscreteObjectKeyFrame.Value>
												<System:Boolean>True</System:Boolean>
											</DiscreteObjectKeyFrame.Value>
										</DiscreteObjectKeyFrame>
									</ObjectAnimationUsingKeyFrames>
									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="button" d:IsOptimized="True"/>
									<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="button" d:IsOptimized="True"/>
									<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="textBox" d:IsOptimized="True"/>
								</Storyboard>
							</VisualState>
							<VisualState x:Name="MouseOut">
								<Storyboard>
									<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="button" d:IsOptimized="True"/>
									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="button">
										<DiscreteObjectKeyFrame KeyTime="0">
											<DiscreteObjectKeyFrame.Value>
												<System:Boolean>False</System:Boolean>
											</DiscreteObjectKeyFrame.Value>
										</DiscreteObjectKeyFrame>
									</ObjectAnimationUsingKeyFrames>
								</Storyboard>
							</VisualState>
						</VisualStateGroup>
						<VisualStateGroup x:Name="LayoutVisualStateGroup">
							<VisualStateGroup.Transitions>
								<VisualTransition GeneratedDuration="0:0:0.7"/>
							</VisualStateGroup.Transitions>
							<VisualState x:Name="Loaded">
							</VisualState>
						</VisualStateGroup>
					</VisualStateManager.VisualStateGroups>
					<VisualStateManager.CustomVisualStateManager>
						<ei:ExtendedVisualStateManager/>
					</VisualStateManager.CustomVisualStateManager>
					<Grid.ColumnDefinitions>
						<ColumnDefinition/>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Border
						BorderBrush="{StaticResource PageBorderBrush}"
						BorderThickness="0,0,1,1"
						Grid.Row="2"
						Grid.Column="0"/>
					<Border
						BorderBrush="{StaticResource PageBorderBrush}"
						BorderThickness="0,0,1,1"
						Grid.Row="2"
						Grid.Column="1"
						Width="110"/>
					<Border
						BorderBrush="{StaticResource PageBorderBrush}"
						BorderThickness="0,0,1,1"
						Grid.Row="2"
						Grid.Column="2"
						Width="110"/>
					<Border
						BorderBrush="{StaticResource PageBorderBrush}"
						BorderThickness="0,0,0,1"
						Grid.Row="2"
						Grid.Column="3"
						Width="110"/>
					<controls:MetroContentControl
						Style="{StaticResource Local_InvoiceItemMetro}">
						<Grid
							Margin="10">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<Button
								x:Name="button"
								Command="{Binding DataContext.RemoveLineItemCommand, ElementName=InvoiceItems}"
								CommandParameter="{Binding}"
								Style="{StaticResource Local_RoundButton}"
								Margin="0,0,15,0"
								Width="24"
								Height="24"
								RenderTransformOrigin="0.5,0.5">
								<Button.RenderTransform>
									<CompositeTransform TranslateX="-50"/>
								</Button.RenderTransform>
								<Image Source="/Metro.Demo;component/Assets/Images/delete.png" Stretch="Fill" Width="24" Height="24" ToolTipService.ToolTip="Delete Item"/>
							</Button>
							<TextBox
								x:Name="textBox"
								Text="{Binding Description, Mode=TwoWay}"
								Style="{StaticResource Local_TextBoxStyleInvoiceItem}"
								AcceptsReturn="True"
								TextWrapping="Wrap"
								ScrollViewer.HorizontalScrollBarVisibility="Disabled"
								ScrollViewer.VerticalScrollBarVisibility="Visible"
								Grid.Column="1"
								RenderTransformOrigin="0.5,0.5">
								<TextBox.RenderTransform>
									<CompositeTransform TranslateX="-39"/>
								</TextBox.RenderTransform>
							</TextBox>
						</Grid>
					</controls:MetroContentControl>
					<controls:MetroContentControl
						Style="{StaticResource Local_InvoiceItemMetro}"
						Grid.Row="2"
						Grid.Column="1">
						<TextBox
							x:Name="hoursTextBox"
							Text="{Binding Hours, Mode=TwoWay, StringFormat=\{0:N\}}"
							Style="{StaticResource Local_TextBoxStyleInvoiceItem}"	
							HorizontalAlignment="Right"
							VerticalAlignment="Top"
							Margin="10"/>
					</controls:MetroContentControl>
					<controls:MetroContentControl
						Style="{StaticResource Local_InvoiceItemMetro}"
						Grid.Row="2"
						Grid.Column="2">
						<TextBox
							x:Name="rateTextBox"
							Text="{Binding Rate, Mode=TwoWay, StringFormat=\{0:c\}}"
							Style="{StaticResource Local_TextBoxStyleInvoiceItem}"
							HorizontalAlignment="Right"
							VerticalAlignment="Top"
							Margin="10">
						</TextBox>
					</controls:MetroContentControl>
					<controls:MetroContentControl
						Style="{StaticResource Local_InvoiceItemMetro}"
						Grid.Row="2"
						Grid.Column="3">
						<TextBlock x:Name="amountTextBox"
							Text="{Binding Amount, StringFormat=\{0:c\}}"
							Style="{StaticResource Local_DefaultText}"
							FontSize="12"
							HorizontalAlignment="Right"
							Margin="10">
						</TextBlock>
					</controls:MetroContentControl>
				</Grid>
			</DataTemplate>
		
			<Style x:Key="Local_ListBoxItemStyle" TargetType="ListBoxItem">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ListBoxItem">
							<Grid Background="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LocalConverter_AlternatingRowBackground}}">
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="LayoutStates">
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="0:0:0.5">
												<VisualTransition.GeneratedEasingFunction>
													<CubicEase EasingMode="EaseInOut"/>
												</VisualTransition.GeneratedEasingFunction>
											</VisualTransition>
										</VisualStateGroup.Transitions>
										<VisualState x:Name="AfterLoaded">
											<Storyboard>
												<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
												<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
												<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="BeforeLoaded"/>
										<VisualState x:Name="BeforeUnloaded"/>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<ContentPresenter x:Name="contentPresenter" RenderTransformOrigin="0.5,0.5" Opacity="0">
									<ContentPresenter.RenderTransform>
										<CompositeTransform TranslateX="-20"/>
									</ContentPresenter.RenderTransform>
									<ContentPresenter.Projection>
										<PlaneProjection/>
									</ContentPresenter.Projection>
								</ContentPresenter>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>
    <Grid
		x:Name="grid"
		Width="815"
		Height="1055">
    	<VisualStateManager.VisualStateGroups>
    		<VisualStateGroup x:Name="VisualStateGroup">
    			<VisualStateGroup.Transitions>
    				<VisualTransition GeneratedDuration="0:0:0.7">
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseInOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    				</VisualTransition>
    			</VisualStateGroup.Transitions>
    			<VisualState x:Name="MouseOverLogo">
    				<Storyboard>
    					<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectLogo" d:IsOptimized="True"/>
    					<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="logoGrid" d:IsOptimized="True"/>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="MouseOutLogo"/>
    		</VisualStateGroup>
    		<VisualStateGroup x:Name="VisualStateGroup1">
    			<VisualStateGroup.Transitions>
    				<VisualTransition GeneratedDuration="0:0:0.7">
    					<VisualTransition.GeneratedEasingFunction>
    						<CubicEase EasingMode="EaseInOut"/>
    					</VisualTransition.GeneratedEasingFunction>
    				</VisualTransition>
    			</VisualStateGroup.Transitions>
    			<VisualState x:Name="MouseOverInvoiceItem">
    				<Storyboard>
    					<DoubleAnimation Duration="0" To="-10" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="AddLineItem" d:IsOptimized="True"/>
    					<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="AddLineItem" d:IsOptimized="True"/>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="MouseOutInvoiceItems"/>
    		</VisualStateGroup>
    	</VisualStateManager.VisualStateGroups>
		
		<Border
			Style="{StaticResource ContentBorderStyle}"
			Margin="15"/>
    	<Grid
    		Margin="45">
    		<Grid.RowDefinitions>
    			<RowDefinition Height="Auto" />
    			<RowDefinition Height="Auto" />
    			<RowDefinition Height="Auto" />
    			<RowDefinition Height="Auto" />
    			<RowDefinition Height="Auto" />
    			<RowDefinition />
    			<RowDefinition Height="Auto" />
    		</Grid.RowDefinitions>
    		<Grid.ColumnDefinitions>
    			<ColumnDefinition Width="Auto" />
    			<ColumnDefinition/>
    			<ColumnDefinition Width="Auto" />
    			<ColumnDefinition Width="Auto" />
    		</Grid.ColumnDefinitions>
			
    		<Grid x:Name="logoGrid" Grid.ColumnSpan="2" Margin="4,-16,0,0" Grid.RowSpan="2" Background="Transparent" RenderTransformOrigin="0.5,0.5">
    			<i:Interaction.Triggers>
    				<i:EventTrigger EventName="MouseEnter">
    					<ei:GoToStateAction StateName="MouseOverLogo"/>
    				</i:EventTrigger>
    				<i:EventTrigger EventName="MouseLeave">
    					<ei:GoToStateAction StateName="MouseOutLogo"/>
    				</i:EventTrigger>
    			</i:Interaction.Triggers>
    			<Grid.RenderTransform>
    				<CompositeTransform TranslateX="-60"/>
    			</Grid.RenderTransform>
    			<Grid.ColumnDefinitions>
    				<ColumnDefinition Width="Auto"/>
    				<ColumnDefinition/>
    			</Grid.ColumnDefinitions>
    			<Button
					x:Name="SelectLogo"
					Style="{StaticResource Local_RoundButton}"
					HorizontalAlignment="Center"
					VerticalAlignment="Top"
					Margin="0,20,10,0"
					Opacity="0"
					ToolTipService.ToolTip="Choose Company Logo">
    				<Image Height="48" Source="/Metro.Demo;component/Assets/Images/camera.png" Stretch="Fill" Width="48"/>
    			</Button>
    			<StackPanel
					Visibility="{Binding DisplayMcBrideSoftwareLogo, Converter={StaticResource Converter_BoolToVisibility}}"
    				Orientation="Horizontal"
					Grid.Column="1">
    				<Image Margin="0,15,0,0" Source="/Metro.Demo;component/Assets/Images/Autumn.png" Stretch="Fill" Width="93" Height="78" VerticalAlignment="Top" HorizontalAlignment="Left"/>
    				<!--<TextBlock TextWrapping="Wrap" Text="秋" FontSize="96" FontFamily="DFKai-SB" Margin="0" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top" Visibility="Collapsed"/>-->
    				<TextBlock
    					Text="M"
    					FontWeight="Bold"
    					FontSize="96"/>
    				<StackPanel>
    					<TextBlock
    						Text="cBride" FontWeight="Bold" FontSize="36" Margin="0,13,0,0" Width="200"/>
    					<TextBlock
    						Text="Software Solutions"/>
    				</StackPanel>
    			</StackPanel>
    			<Image
					behaviors:Image.SetSource="{Binding ImageSource}"
					Stretch="None"
					Margin="8,0,0,0"
					Grid.Column="1" Height="150" Width="360" HorizontalAlignment="Left" VerticalAlignment="Top"/>
    		</Grid>
			
			<!--
				Company Info
			-->
    		<Border
    			BorderBrush="{StaticResource PageBorderBrush}"
    			BorderThickness="0,0,1,0"
    			Grid.Column="2"/>
    		<TextBlock
    			Text="From"
    			HorizontalAlignment="Right"
    			Margin="0,0,10,0"
    			Grid.Column="2"/>
    		<controls:MetroContentControl
    			Margin="10,0"
    			Grid.Column="3"
    			Width="200">
    			<StackPanel>
    				<TextBox
    					Text="{Binding Invoice.Company.Name, Mode=TwoWay}"
    					FontWeight="Bold"
    					Style="{StaticResource Local_TextBoxStyle}"/>
    				<TextBox
    					Text="{Binding Invoice.Company.Line1, Mode=TwoWay}"
    					Style="{StaticResource Local_TextBoxStyle}"/>
    				<TextBox
    					Text="{Binding Invoice.Company.Line2, Mode=TwoWay}"
    					Style="{StaticResource Local_TextBoxStyle}"/>
    				<TextBox
    					Text="{Binding Invoice.Company.Phone, Mode=TwoWay}"
    					Style="{StaticResource Local_TextBoxStyle}"/>
    			</StackPanel>
    		</controls:MetroContentControl>
			
    		<Grid
    			Margin="0,75,0,0"
    			Grid.Row="1"/>
			
<!--
				Invoice Info
			-->
    		<Border
    			BorderBrush="{StaticResource PageBorderBrush}"
    			BorderThickness="0,0,1,0"
    			Grid.Row="2"
    			Grid.Column="0"/>
    		<StackPanel
    			Margin="10,0,30,0"
    			Grid.Row="2"
    			Grid.Column="0">
    			<TextBlock
    				Text="Invoice ID"
    				Style="{StaticResource Local_InvoiceInfo}"/>
    			<TextBlock
    				Text="Issue Date"
    				Style="{StaticResource Local_InvoiceInfo}"/>
    			<TextBlock
    				Text="Due Date"
    				Style="{StaticResource Local_InvoiceInfo}"/>
    		</StackPanel>
			<controls:MetroContentControl
				Margin="10,0,0,0"
    			Grid.Row="2"
    			Grid.Column="1">
    			<StackPanel>
    				<TextBox
    					Text="{Binding Invoice.InvoiceID, Mode=TwoWay}"
    					FontWeight="Bold"
    					Style="{StaticResource Local_TextBoxStyleInvoiceData}"/>
    				<TextBox
    					Text="{Binding Invoice.IssuedDate, Mode=TwoWay, StringFormat=\{0:MM/dd/yyyy\}}"
    					Style="{StaticResource Local_TextBoxStyleInvoiceData}"/>
    				<StackPanel
    					Orientation="Horizontal">
    					<TextBox
    						Text="{Binding Invoice.DueDate, Mode=TwoWay, StringFormat=\{0:MM/dd/yyyy\}}"
    						Style="{StaticResource Local_TextBoxStyleInvoiceData}"/>
    					<TextBlock
    						Text="{Binding Invoice.Net, StringFormat=(\{0\})}"
    						Margin="5,0,0,0"/>
    				</StackPanel>
    			</StackPanel>
			</controls:MetroContentControl>

<!--
				Invoiced To
			-->
    		<Border
    			BorderBrush="{StaticResource PageBorderBrush}"
    			BorderThickness="0,0,1,0"
    			Grid.Row="2"
    			Grid.Column="2"/>
    		<TextBlock
    			Text="Invoice For"
    			HorizontalAlignment="Right"
    			Margin="0,0,10,0"
    			Grid.Row="2"
    			Grid.Column="2"/>
			<controls:MetroContentControl
				Margin="10,0"
    			Grid.Row="2"
    			Grid.Column="3" >
    			<StackPanel
					Width="200">
    				<TextBox
    					Text="{Binding Invoice.Client.Name, Mode=TwoWay}"
    					FontWeight="Bold"
    					Style="{StaticResource Local_TextBoxStyle}"/>
    				<TextBox
    					Text="{Binding Invoice.Client.Line1, Mode=TwoWay}"
    					Style="{StaticResource Local_TextBoxStyle}"/>
    				<TextBox
    					Text="{Binding Invoice.Client.Line2, Mode=TwoWay}"
    					Style="{StaticResource Local_TextBoxStyle}"/>
    				<TextBox
    					Text="{Binding Invoice.Client.Phone, Mode=TwoWay}"
    					Style="{StaticResource Local_TextBoxStyle}"/>
    			</StackPanel>
			</controls:MetroContentControl>

    		<TextBox
    			Text="{Binding Invoice.Subject, Mode=TwoWay}"
    			Style="{StaticResource Local_TextBoxStyle}"
    			Margin="10,35,0,0"
    			Grid.Row="3"
    			Grid.ColumnSpan="4"/>
				
<!--
				Invoice Info
			-->
    		<Grid Margin="-30,10,-30,-20" Grid.ColumnSpan="4" Grid.Row="4" Background="Transparent">
    			<i:Interaction.Triggers>
    				<i:EventTrigger EventName="MouseEnter">
    					<ei:GoToStateAction StateName="MouseOverInvoiceItem"/>
    				</i:EventTrigger>
    				<i:EventTrigger EventName="MouseLeave">
    					<ei:GoToStateAction StateName="MouseOutInvoiceItems"/>
    				</i:EventTrigger>
    			</i:Interaction.Triggers>
    			<Grid
    				Margin="30,25,30,20">
    				<Grid.ColumnDefinitions>
    					<ColumnDefinition/>
    					<ColumnDefinition Width="Auto" />
    					<ColumnDefinition Width="Auto" />
    					<ColumnDefinition Width="Auto" />
    				</Grid.ColumnDefinitions>
    				<Grid.RowDefinitions>
    					<RowDefinition Height="Auto" />
    					<RowDefinition Height="Auto" />
    					<RowDefinition Height="Auto" />
    					<RowDefinition Height="Auto" />
    				</Grid.RowDefinitions>
				
					<!--
					Headers
				-->
    				<Border
    					BorderBrush="{StaticResource PageBorderBrush}"
    					BorderThickness="0,0,0,1"
    					Grid.ColumnSpan="4"/>
    				<Border
    					BorderBrush="{StaticResource PageBorderBrush}"
    					BorderThickness="0,0,1,0"
    					Grid.Column="0"/>
    				<Border
    					BorderBrush="{StaticResource PageBorderBrush}"
    					BorderThickness="0,0,1,0"
    					Grid.Column="1"
    					Width="110"/>
    				<Border
    					BorderBrush="{StaticResource PageBorderBrush}"
    					BorderThickness="0,0,1,0"
    					Grid.Column="2"
    					Width="110"/>
    				<Border
    					BorderBrush="{StaticResource PageBorderBrush}"
    					BorderThickness="0,0,0,0"
    					Grid.Column="3"
    					Width="110"/>
    				<TextBlock
    					Text="Description"
    					Style="{StaticResource Local_SmallTitle}"
    					Margin="10,0,0,2"/>
    				<TextBlock
    					Text="Hours"
    					Style="{StaticResource Local_SmallTitle}"
    					Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,10,0"/>
    				<TextBlock
    					Text="Rate"
    					Style="{StaticResource Local_SmallTitle}"
    					Grid.Column="2" HorizontalAlignment="Right" Margin="0,0,10,0"/>
    				<TextBlock
    					Text="Amount"
    					Style="{StaticResource Local_SmallTitle}"
    					HorizontalAlignment="Right"
    					Grid.Column="3" Margin="0,0,10,0"/>
				
    				<ListBox
    					x:Name="InvoiceItems"
    					ScrollViewer.HorizontalScrollBarVisibility="Disabled"
    					Grid.Row="1"
    					Grid.ColumnSpan="4"
    					ItemTemplate="{StaticResource InvoiceItemTemplate}"
    					ItemsSource="{Binding Invoice.Items}"
    					ItemContainerStyle="{StaticResource Local_ListBoxItemStyle}"
    					Padding="0"/>
    			</Grid>
    			<Button
    				x:Name="AddLineItem"
    				Style="{StaticResource Local_RoundButton}"
    				ToolTipService.ToolTip="Add Item"
    				HorizontalAlignment="Left" Width="48" Height="48" VerticalAlignment="Top" Margin="0" RenderTransformOrigin="0.5,0.5" Opacity="0">
    				<Button.RenderTransform>
    					<CompositeTransform TranslateX="-30"/>
    				</Button.RenderTransform>
    				<i:Interaction.Triggers>
    					<i:EventTrigger EventName="Click">
    						<ei:CallMethodAction TargetObject="{Binding DataContext, ElementName=grid}" MethodName="AddLineItem"/>
    					</i:EventTrigger>
    				</i:Interaction.Triggers>
    				<Image Height="48" Source="/Metro.Demo;component/Assets/Images/new.png" Stretch="Fill" Width="48"/>
    			</Button>
			
    		</Grid>
			
<!--
				Invoice Info
			-->
			
    		<Grid
    			Background="Transparent"
    			Margin="0,25,0,0"
    			Grid.Row="5"
    			Grid.ColumnSpan="4">
    			<Grid.ColumnDefinitions>
    				<ColumnDefinition />
    				<ColumnDefinition Width="Auto" />
    			</Grid.ColumnDefinitions>
				
    			<TextBlock
    				Text="Amount Due"
    				HorizontalAlignment="Right"
    				Margin="0,0,10,0"
    				Style="{StaticResource Local_SmallTitle}"
    				FontSize="14.667"/>
    			<Grid
    				Width="105"
    				Grid.Column="1">
    				<TextBlock
    					Text="{Binding Invoice.Items.AmountDue, StringFormat=\{0:c\}}"
    					HorizontalAlignment="Right" Margin="0,0,10,0" FontWeight="Bold"/>
    			</Grid>
    		</Grid>
			
<!--
				Footer
			-->
    		<Grid
    			Margin="0,25,0,0"
    			Grid.Row="6"
    			Grid.ColumnSpan="4">
    			<Grid.RowDefinitions>
    				<RowDefinition Height="Auto" />
    				<RowDefinition Height="Auto" />
    			</Grid.RowDefinitions>
    			<Border
    				BorderBrush="{StaticResource PageBorderBrush}"
    				BorderThickness="0,1,0,0"/>
    			<TextBlock
    				Text="Notes"
    				Style="{StaticResource Local_SmallTitle}"
    				Margin="10,10,0,0"/>
    			<TextBox
    				Text="{Binding Invoice.Notes, Mode=TwoWay}"
    				Margin="10,10,0,0"
    				Style="{StaticResource Local_TextBoxStyle}"
    				TextWrapping="Wrap"
    				Grid.Row="1"/>
    		</Grid>
    	</Grid>
    </Grid>
</UserControl>