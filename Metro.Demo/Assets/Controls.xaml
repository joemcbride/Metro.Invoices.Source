<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:controls="clr-namespace:Metro.Controls"
	xmlns:layoutToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Layout.Toolkit"
	mc:Ignorable="d">
	
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Theme/Styles.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="Control_PlainListBoxItem" TargetType="ListBoxItem">
		<Setter Property="Margin" Value="0,0,0,0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="BorderBrush" Value="#FF221E1F"/>
		<Setter Property="TabNavigation" Value="Local"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Border x:Name="root" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" RenderTransformOrigin="0.5,0.5">
						<Border.RenderTransform>
							<CompositeTransform TranslateX="-25"/>
						</Border.RenderTransform>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<!--<Storyboard>
										<DoubleAnimation Duration="0" To=".35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor"/>
									</Storyboard>-->
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected">
									<!--<Storyboard>
										<DoubleAnimation Duration="0" To=".75" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor2"/>
									</Storyboard>-->
								</VisualState>
								<VisualState x:Name="SelectedUnfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<!--<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>-->
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="LayoutStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.9">
										<VisualTransition.GeneratedEasingFunction>
											<CubicEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="AfterLoaded">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="root" />
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="root" />
									</Storyboard>
									<!--<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="root">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="0:0:.2" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="root">
											<EasingDoubleKeyFrame KeyTime="0" Value="-25"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>-->
								</VisualState>
								<VisualState x:Name="BeforeLoaded">
								</VisualState>
								<VisualState x:Name="BeforeUnloaded">
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="grid">
							<Rectangle x:Name="fillColor" Fill="#FFBADDE9" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
							<Rectangle x:Name="fillColor2" Fill="#FFBADDE9" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
							<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
							<Rectangle x:Name="FocusVisualElement" RadiusY="1" RadiusX="1" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Control_ShellTransitionContentControl" TargetType="layoutToolkit:TransitioningContentControl">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="58,15,58,15"/>
		<Setter Property="IsTabStop" Value="True"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Transition" Value="DefaultTransition"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="layoutToolkit:TransitioningContentControl">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PresentationStates">
								<VisualState x:Name="DefaultTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="UpTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="30"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="-30"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="DownTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="-40"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="40"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="LeftTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="30"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="-30"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="RightTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="-30"/>
											<EasingDoubleKeyFrame KeyTime="00:00:00.700" Value="0">
												<EasingDoubleKeyFrame.EasingFunction>
													<CubicEase EasingMode="EaseOut"/>
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.100" Value="0"/>
										</DoubleAnimationUsingKeyFrames>

										<!--<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="30"/>
										</DoubleAnimationUsingKeyFrames>-->
									</Storyboard>
								</VisualState>

							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid
							Margin="{TemplateBinding Padding}">
							<ContentPresenter x:Name="PreviousContentPresentationSite" Content="{x:Null}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<ContentPresenter.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</ContentPresenter.RenderTransform>
							</ContentPresenter>
							<ContentPresenter x:Name="CurrentContentPresentationSite" Content="{x:Null}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<ContentPresenter.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</ContentPresenter.RenderTransform>
							</ContentPresenter>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Control_TransitionContentControl" TargetType="layoutToolkit:TransitioningContentControl">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="IsTabStop" Value="True"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Transition" Value="RightTransition"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="layoutToolkit:TransitioningContentControl">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PresentationStates">
								<VisualState x:Name="DefaultTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="UpTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="30"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="-30"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="DownTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="-40"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="40"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="LeftTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="30"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="-30"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="RightTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1"/>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CurrentContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="-30"/>
											<EasingDoubleKeyFrame KeyTime="00:00:00.700" Value="0">
												<EasingDoubleKeyFrame.EasingFunction>
													<CubicEase EasingMode="EaseOut"/>
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.100" Value="0"/>
										</DoubleAnimationUsingKeyFrames>

										<!--<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PreviousContentPresentationSite" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="30"/>
										</DoubleAnimationUsingKeyFrames>-->
									</Storyboard>
								</VisualState>

							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid
							Margin="{TemplateBinding Padding}">
							<ContentPresenter x:Name="PreviousContentPresentationSite" Content="{x:Null}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<ContentPresenter.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</ContentPresenter.RenderTransform>
							</ContentPresenter>
							<ContentPresenter x:Name="CurrentContentPresentationSite" Content="{x:Null}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<ContentPresenter.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</ContentPresenter.RenderTransform>
							</ContentPresenter>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Control_ShellContentControl" TargetType="controls:MetroContentControl">
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="58,15,58,50"/>
		<Setter Property="IsTabStop" Value="True"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContentControl">
					<Grid x:Name="root" RenderTransformOrigin="0.5,0.5">
						<Grid.RenderTransform>
							<CompositeTransform/>
						</Grid.RenderTransform>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="LayoutStates">
								<VisualState x:Name="AfterLoaded">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="root">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="00:00:00.700" Value="1">
												<EasingDoubleKeyFrame.EasingFunction>
													<CubicEase EasingMode="EaseOut"/>
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="AfterUnLoaded">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="root"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="BeforeLoaded"/>
								<VisualState x:Name="BeforeUnloaded"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter
							Cursor="{TemplateBinding Cursor}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							Content="{TemplateBinding Content}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Padding}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>